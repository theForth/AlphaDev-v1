//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;


public class PokeballProjectileController : BaseProjectileController
{

    public AudioClip openPokeball;
    public Trainer trainer;
    public int pokePartyIndex;
		public void Reset ()
		{
				projectileAcceleration.x = -5;
				projectileAcceleration.y = -5;
		}
        public void Shoot(int pokePartyIndex)
		{
				if (shootTimer <= 0) {
						currentAmmo--;
						shootTimer += 1 / rateOfFire;
                        ThrowPokeball(pokePartyIndex);
					
				}
			
		}
        public void ThrowPokeball(int pokePartyIndex)
		{       
            //Intiating all the pokeball component values
				 
						GameObject pokeball = (GameObject)Instantiate (projectile, transform.position, transform.rotation); 
						pokeball.name = "Defaultprojectile";
						//pokeball.AddComponent<Rigidbody> ();
						pokeball.rigidbody.mass = projectileMass;
						pokeball.rigidbody.drag = 0;
						pokeball.rigidbody.useGravity = false;


                        pokeball.AddComponent<Pokeball>().Init(trainer, pokePartyIndex, openPokeball);
                     
						pokeball.rigidbody.velocity =
					Camera.main.transform.forward * (projectileSpeed + projectileSpeedDelta * (Random.value - 0.5f) * 2)
								+ Camera.main.transform.up * (verticalSpread * (Random.value - 0.5f) * 2)
								+ Camera.main.transform.right * (horizontalSpread * (Random.value - 0.5f) * 2);
				
						pokeball.AddComponent<ConstantForce> ();
						pokeball.constantForce.force = (projectileAcceleration.x * Camera.main.transform.forward
								+ projectileAcceleration.y * Camera.main.transform.up
								+ projectileAcceleration.z * Camera.main.transform.right) * accelerationScale;
						pokeball.constantForce.force += (projectileGlobalAcceleration) * accelerationScale;
						pokeball.constantForce.force *= 50f;
						audioSource = gameObject.AddComponent<AudioSource> ();
						//audioSource.clip = shootSound;
						//audioSource.Play ();
                        SoundManager.PlaySFX(shootSound);
				
						//pokeball.AddComponent<APEprojectile> ().life = projectileLife;
				
		}
}


