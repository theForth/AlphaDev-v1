1.1.0
- plugin name was changed to Advanced FPS Counter, as well, as main class name - be carefull when updating
- new easy ways to add plugin
  * via hotkey CTRL+SHIFT+ALT+F (or CMD+SHIFT+ALT+F on Mac)
  * using menu item "GameObject->Create Other->Code Stage->Advanced FPS Counter"
  * using AFPSCounter.Instance from code (will spawn plugin instance in runtime)
- incorrect plugin placement may be auto-corrected now
- brand new counters layout system - now you may control counter's anchor (all four corners available)
  * you may stack all counters in one corner and they will be drawn in one GUIText label and use only one Draw Call
  * now stacked counters has fixed Y position and will not overlap on screen height change
  * text automatically aligns depending on selected anchor
- new Hot Key option allows to pick any KeyCode to quickly enable / disable plugin in runtime
- new option "Keep Alive" prevents plugin's Game Object destroying on new level (scene) load
- new option Force FPS, allows you to try change current FPS in game, useful for physics testing for example
- font size can be changed now for all counters
- new "Precise" option for Memory Counter, allows to save system resources while disabled
- Memory Counter now shows private memory of Flash Player plugin while running in Flash Player
- new "Average FPS" option for FPS Counter allows to see average frames per second value since game or scene start (controlled by Reset On Load option)
  * and of course it may be easily reset from code
- device info output is now more flexible and accurate
- no more Update and FixedUpdate loops - counters values are updated in Coroutines or on demand from code now
- smart "dirty" state detection for counters implemented - text changes only when counter value was changed or if 
- counters may be easily enabled and disabled both from code and editor now 
  * you may use regular AFPSCounter component "enabled" property
  * you also may use AFPSCounter.Instance.enabled field at any time
  * AFPSCounter.Instance usage wiull create AFPSCounter automatically if it was not in scene
  * AFPSCounter may be disposed completely using AFPSCounter.Instance.Dispose() (and it still may be created again using AFPSCounter.Instance.*)
  * you may enable and disable separate counters using new toggles agains every counter in inspector or from code
- AFPS Counter now warns if it can't be drawn using additional check on awake phase (only in editor)
- added readme.pdf
- changed default colors
- minor fixes
* huge thanks goes to Daniele Giardini for feature requests and numerous feedback on plugin at all

1.0.0
- initial release